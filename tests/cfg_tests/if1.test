################################################################################
#    Copyright (c) 2012, KAIST.
#    All rights reserved.
#
#    Use is subject to license terms.
#
#    This distribution may include materials developed by third parties.
################################################################################
tests=if1
CFG_TESTS_DIR=${JS_HOME}/tests/cfg_tests
cfg
cfg_out_WCIequals=\
(0,LBlock(12))\n\
\n\
\n\
(0,LBlock(11))\n\
    [EDGE] after-call(<>Global<>ignore2)\n\
    [39] noop(EndOfFile)\n\
\n\
\n\
(0,LBlock(10))\n\
\n\
\n\
(0,LBlock(9))\n\
    [EDGE] after-call(<>z<>23)\n\
    [34] <>temp<>24 := <>y<>18 + <>z<>23 + "!"\n\
    [35] <>arguments<>25 := allocArg(1) @ #19\n\
    [36] <>arguments<>25["0"] := <>temp<>24\n\
    [37] <>fun<>26 := <>Global<>getBase(print)\n\
    [38] call(<>obj<>5, <>fun<>26, <>arguments<>25) @ #20\n\
\n\
\n\
(0,LBlock(8))\n\
\n\
\n\
(0,LBlock(7))\n\
    [EDGE] after-call(<>z<>17)\n\
    [27] <>y<>18 := <>y<>12 + <>z<>17 + "! and I say "\n\
    [28] <>obj<>19 := <>Global<>toObject(say) @ #15\n\
    [29] <>temp<>20 := "me"\n\
    [30] <>arguments<>21 := allocArg(1) @ #16\n\
    [31] <>arguments<>21["0"] := <>temp<>20\n\
    [32] <>fun<>22 := <>Global<>getBase(say)\n\
    [33] call(<>obj<>19, <>fun<>22, <>arguments<>21) @ #17\n\
\n\
\n\
(0,LBlock(6))\n\
\n\
\n\
(0,LBlock(5))\n\
    [EDGE] after-call(<>z<>11)\n\
    [20] <>y<>12 := <>y<>6 + <>z<>11 + "! Boys say "\n\
    [21] <>obj<>13 := <>Global<>toObject(say) @ #11\n\
    [22] <>temp<>14 := "boy"\n\
    [23] <>arguments<>15 := allocArg(1) @ #12\n\
    [24] <>arguments<>15["0"] := <>temp<>14\n\
    [25] <>fun<>16 := <>Global<>getBase(say)\n\
    [26] call(<>obj<>13, <>fun<>16, <>arguments<>15) @ #13\n\
\n\
\n\
(1,LBlock(4))\n\
\n\
\n\
(1,LBlock(3))\n\
    [1] assert(<>gender<>1 != "girl")\n\
    [4] <>obj<>4 := <>Global<>toObject(human) @ #2\n\
    [5] return(<>obj<>4["boy"])\n\
\n\
\n\
(1,LBlock(2))\n\
    [0] assert(<>gender<>1 == "girl")\n\
    [2] <>obj<>3 := <>Global<>toObject(human) @ #1\n\
    [3] return(<>obj<>3["girl"])\n\
\n\
\n\
(1,LBlock(1))\n\
\n\
\n\
(0,LBlock(0))\n\
    [6] say := function (1) @ #3, #4\n\
    [7] noop(StartOfFile)\n\
    [8] <>Global<>ignore1 := alloc() @ #5\n\
    [9] <>Global<>ignore1["girl"] := "Hoo"\n\
    [10] <>Global<>ignore1["boy"] := "Ha"\n\
    [11] human := <>Global<>ignore1\n\
    [12] <>obj<>5 := <>Global<>toObject(print) @ #6\n\
    [13] <>y<>6 := "Girls say "\n\
    [14] <>obj<>7 := <>Global<>toObject(say) @ #7\n\
    [15] <>temp<>8 := "girl"\n\
    [16] <>arguments<>9 := allocArg(1) @ #8\n\
    [17] <>arguments<>9["0"] := <>temp<>8\n\
    [18] <>fun<>10 := <>Global<>getBase(say)\n\
    [19] call(<>obj<>7, <>fun<>10, <>arguments<>9) @ #9\n\
\n\
\n\
\n
cfg_err_equals=
